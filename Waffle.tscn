[gd_scene load_steps=12 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float scale = 5.0;

void fragment(){
	vec2 modified_uv = UV - 0.5;
	
	float d = length(modified_uv);
	float final_alpha = smoothstep(0.4, 0.45, d);
	
	COLOR = vec4(1.0, 1.0, 1.0, final_alpha);
	
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/scale = 5.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float scale = 5.0;

void fragment(){
	vec2 modified_uv = UV - 0.5;
	vec2 local_uv = vec2(fract(UV * scale)) - 0.5;
	vec2 uv_id = floor(UV * scale);
	
	float d = length(local_uv);
	float final_alpha = smoothstep(0.4, 0.45, d);
	
	COLOR = vec4(1.0, 1.0, 1.0, final_alpha);
	
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/scale = 5.0

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform float scale = 5.0;

void fragment(){
	vec2 modified_uv = UV - 0.5;
	vec2 local_uv = vec2(fract(UV * scale)) - 0.5;
	vec2 uv_id = floor(UV * scale);
	
	float large_d = length(modified_uv);
	float grid_d = length(local_uv);
	float final_alpha = smoothstep(0.1, 0.85, grid_d) * smoothstep(0.5, 0.4, large_d);
	
	COLOR = vec4(1.0, 1.0, 1.0, final_alpha);
	
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/scale = 5.0

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform float scale = 5.0;

vec2 rotation_matrix(vec2 uv, float rot){
	mat2 m = mat2(vec2(sin(rot), -cos(rot)),
				vec2(cos(rot), sin(rot)));
	uv = uv * m;
	return uv;
}

void fragment(){
	vec2 modified_uv = UV - 0.5;
	vec2 local_uv = vec2(fract(UV * scale)) - 0.5;
	vec2 uv_id = floor(UV * scale);
	
	vec2 rotated_uv = rotation_matrix(modified_uv, 4.0 * TIME);
	
	float large_d = length(rotated_uv);
	float grid_d = length(local_uv);
	float final_alpha = smoothstep(0.1, 0.85, grid_d) * smoothstep(0.5, 0.4, large_d);
	
	COLOR = vec4(1.0, rotated_uv.x, 1.0, final_alpha);
	
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/scale = 5.0

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

uniform float scale = 5.0;

vec2 rotation_matrix(vec2 uv, float rot){
	mat2 m = mat2(vec2(sin(rot), -cos(rot)),
				vec2(cos(rot), sin(rot)));
	uv = uv * m;
	return uv;
}

void fragment(){
	vec2 modified_uv = UV - 0.5;
	vec2 local_uv = vec2(fract(UV * scale)) - 0.5;
	vec2 uv_id = floor(UV * scale);
	
	vec2 rotated_uv = rotation_matrix(local_uv, 4.0 * TIME);
	
	float large_d = length(modified_uv);
	float grid_d = length(local_uv);
	float final_alpha = smoothstep(0.1, 0.85, grid_d) * smoothstep(0.5, 0.4, large_d);
	
	COLOR = vec4(rotated_uv.y, rotated_uv.x, 1.0, clamp( final_alpha, 0.0, 0.1));
}

void vertex(){
	VERTEX = 1.0 / TEXTURE_PIXEL_SIZE * rotation_matrix(UV - 0.5,  TIME/2.0);
	
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/scale = 5.0

[node name="Node2D" type="Node2D"]

[node name="Circle" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( 57.374, 56.0975 )
texture = ExtResource( 1 )

[node name="CircleGrid" type="Sprite" parent="."]
material = SubResource( 4 )
position = Vector2( 149.384, 56.6858 )
texture = ExtResource( 1 )

[node name="Waffle" type="Sprite" parent="."]
material = SubResource( 6 )
position = Vector2( 239.594, 57.6929 )
texture = ExtResource( 1 )

[node name="Gridspin" type="Sprite" parent="."]
material = SubResource( 8 )
position = Vector2( 321.083, 62.5585 )
texture = ExtResource( 1 )

[node name="icon" type="Sprite" parent="."]
material = SubResource( 10 )
position = Vector2( 407.891, 63.2304 )
texture = ExtResource( 1 )
