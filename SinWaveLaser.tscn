[gd_scene load_steps=10 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;



float draw_wave(vec2 pos, float time){
	float wave = smoothstep(0.03, 0.001, abs(pos.y));
	return wave;
}

void fragment(){
	vec2 modified_uv = (UV - 0.5);
	modified_uv.y += sin(modified_uv.x * 20.0 - TIME * 10.0) / (10.0);
	COLOR = vec4(draw_wave(modified_uv, TIME));
	
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float frequency = 10.0;
uniform float speed = 10.0;

float draw_wave(vec2 pos, float time){
	float wave = smoothstep(0.03, 0.001, abs(pos.y));
	return wave;
}

void fragment(){
	// The UV is adjusted Left on the x axis and half way down the Y axis
	vec2 modified_uv = (UV);
	modified_uv.y -= 0.5;
	// TO CHANGE SIZE PLAY WITH THE LAST NUMBER IN LINE BELOW
	float change_in_size = 1.0 - (modified_uv.x) / 1.5;
	
	modified_uv.y += sin(modified_uv.x * frequency - TIME * speed) / (10.0 * change_in_size);
	COLOR = vec4(draw_wave(modified_uv, TIME));
	
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/frequency = 10.0
shader_param/speed = 10.0

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform float frequency = 10.0;
uniform float speed = 10.0;
uniform float deceleration : hint_range(0.1, 5.0);
// Growth 1 is no change and 5.5 is just about outside the texture
uniform float growth : hint_range(1.0, 5.5);

float draw_wave(vec2 pos, float time){
	float wave = smoothstep(0.03, 0.001, abs(pos.y));
	return wave;
}

void fragment(){
	// The UV is adjusted Left on the x axis and half way down the Y axis
	vec2 modified_uv = (UV);
	modified_uv.y -= 0.5;
	// This pushes most of the uv to the right or left side of the texture 
	modified_uv.x = pow(modified_uv.x, deceleration);
	float change_in_size = 1.0 - (modified_uv.x) / (7.0 - growth);
	modified_uv.y += sin(modified_uv.x * frequency - TIME * speed) / (10.0 * change_in_size);
	COLOR = vec4(draw_wave(modified_uv, TIME));
	
}
"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/frequency = 10.0
shader_param/speed = 10.0
shader_param/deceleration = 2.319
shader_param/growth = 5.413

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform float frequency = 10.0;
uniform float speed = 10.0;
uniform float deceleration : hint_range(0.3, 5.0);
// Growth 1 is no change and 5.5 is just about outside the texture
uniform float growth : hint_range(1.0, 5.5);

float draw_wave(vec2 pos, float time, float offset){
	pos.y -= 0.5;
	pos.x = pow(pos.x, deceleration * offset);
	float change_in_size = 1.0 - (pos.x) / (7.0 - mix(growth, offset, 0.4));
	pos.y += sin(pos.x * frequency * offset - time * speed) / (10.0 * change_in_size);
	float wave = smoothstep(0.05, 0.001, abs(pos.y));
	return wave;
}

float mix_wave(float wave_1, float wave_2){
	return (wave_1 - wave_2);
}


void fragment(){
	// The UV is adjusted Left on the x axis and half way down the Y axis
	vec2 modified_uv = (UV);
	float mask = draw_wave(UV, TIME, 1.0);
	//mask += draw_wave(UV + vec2(0.1, 0.04), TIME, 2.12634);
	//mask += draw_wave(UV - vec2(0.1, 0.04), TIME, 0.5 + abs(sin(TIME) * 2.0));
	
	mask += mix_wave(draw_wave(UV, TIME, 0.5), draw_wave(UV + vec2(-0.3, 0.2), TIME, 1.352));
	COLOR = vec4(mask);
	
}
"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/frequency = 10.0
shader_param/speed = 5.0
shader_param/deceleration = 1.384
shader_param/growth = 5.5

[node name="Node2D" type="Node2D"]

[node name="Simple sin wave" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( 43.4325, 49.1125 )
texture = ExtResource( 1 )

[node name="Wave that can grow" type="Sprite" parent="."]
material = SubResource( 4 )
position = Vector2( 136.857, 53.5135 )
texture = ExtResource( 1 )

[node name="Wave with deceleration" type="Sprite" parent="."]
material = SubResource( 6 )
position = Vector2( 238.664, 50.1521 )
scale = Vector2( 1.18298, 1.0919 )
texture = ExtResource( 1 )

[node name="Move code into function" type="Sprite" parent="."]
material = SubResource( 8 )
position = Vector2( 430.724, 47.8213 )
scale = Vector2( 3.65948, 1 )
texture = ExtResource( 1 )
